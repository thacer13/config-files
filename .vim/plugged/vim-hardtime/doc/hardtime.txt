*hardtime.txt*   Plugin to help you stop repeating the basic movement keys

INTRODUCTION                                                         *hardtime*

Hardtime helps you break that annoying habit vimmers have of scrolling up and
down the page using `jjjjj` and `kkkkk` but without compromising the rest of
our vim experience.

It works using a timeout on the keys you want to stop repeating, i.e.  `h`,
`j`, `k`, `l`, `UP`, `DOWN`, `LEFT`, `RIGHT`. This timeout is set to 1000
milliseconds. After this time you can use a movement key again. It also allows
to completely disable keys that you never under any circumstances want to use.

                                               *hardtime-commands* *HardTimeOn*
COMMANDS                                         *HardTimeOff* *HardTimeToggle*

Once installed you can call the command `:HardTimeOn` to activate hardtime,
conversely you can use `:HardTimeOff` to switch it off. You can also use
`:HardTimeToggle` toggle it on an off.

If you want hardtime to run in every buffer, add this to `.vimrc`
>
    let g:hardtime_default_on = 1
<
The default is `0`.

OPTIONS                                                      *hardtime-options*

    g:hardtime_default_on                               *g:hardtime_default_on*
        Enables hardtime in every buffer, except ones matched by
        |g:hardtime_ignore_buffer_patterns|.
        Default is:
>
        let g:hardtime_default_on = 0
<

    g:list_of_normal_keys                               *g:list_of_normal_keys*
    g:list_of_visual_keys                               *g:list_of_visual_keys*
    g:list_of_insert_keys                               *g:list_of_insert_keys*
    g:list_of_disabled_keys                           *g:list_of_disabled_keys*
        Set the list of keys to be banned of use with hardtime
        Default is:
>
        let g:list_of_normal_keys = [
            \ "h", "j", "k", "l", "-", "+",
            \ "<UP>", "<DOWN>", "<LEFT>", "<RIGHT>"] 

        let g:list_of_visual_keys = [
            \ "h", "j", "k", "l", "-", "+",
            \ "<UP>", "<DOWN>", "<LEFT>", "<RIGHT>"] 

        let g:list_of_insert_keys = ["<UP>", "<DOWN>", "<LEFT>", "<RIGHT>"] 
        let g:list_of_disabled_keys = []
<
        Note that the keys added to |g:list_of_disabled_keys| are disabled in
        all of normal, visual and insert modes.

    g:hardtime_timeout                                     *g:hardtime_timeout*
        It is possible to tweak the timeout allowed between keypresses.
        specifying the time in milliseconds.
        Default is:
>
        let g:hardtime_timeout = 1000
<

    g:hardtime_showmsg                                     *g:hardtime_showmsg*
        Enable Notifications To enable the notification about HardTime being
        enabled set
        Default is:
>
        let g:hardtime_showmsg = 0
<

    g:hardtime_ignore_buffer_patterns       *g:hardtime_ignore_buffer_patterns*
        Ignore Buffers To enable hardtime to ignore certain buffer patterns
        set
>
        let g:hardtime_ignore_buffer_patterns = ["CustomPatt[ae]rn", "NERD.*"]
<
        The default is: `[]`.

    g:hardtime_ignore_quickfix                     *g:hardtime_ignore_quickfix*
        Ignore Quickfix The quickfix window cannot be added to the ignore
        buffers array to have hardtime ignore it set
        Default is:
>
        let g:hardtime_ignore_quickfix = 0
<

    g:hardtime_allow_different_key             *g:hardtime_allow_different_key*
        Allow different keys To make hardtime allow a key if it is different
        from the previous key, set
        Default is:
>
        let g:hardtime_allow_different_key = 0
<

    g:hardtime_maxcount                                   *g:hardtime_maxcount*
        Maximum number of repetative key preses This setting will let you
        press a key `n` number of times before hardtime starts ignoring
        subsequent keypresses.
        Default is:
>
        let g:hardtime_maxcount = 1
<
        Setting this value to `2` will allow a user to press `jj` but not `jjj`

==============================================================================
vim:tw=78:sw=4:ts=8:ft=help:norl:noet:
