sudo nano /etc/dnf/dnf.conf
sudo dnf update
sudo dnf install https://mirrors.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm https://mirrors.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm
sudo dnf groupupdate core
flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
sudo dnf groupupdate multimedia --setop="install_weak_deps=False" --exclude=PackageKit-gstreamer-plugin
sudo dnf groupupdate sound-and-video
sudo dnf install neofetch
sudo dnf install fastfetch
fastfetch 
clear
fastfetch
sudo dnf copr enable dawid/better_fonts -y
sudo dnf install fontconfig-font-replacements -y
sudo dnf install fontconfig-enhanced-defaults -y
gsettings set org.gnome.desktop.interface clock-format 12h
cd /dev
sudo mv video0 video0.original
sudo ln -s /dev/video2 /dev/video0
cd && clear && fastfetch 
reboot
cd Downloads/
ls
sudo rpm -i min-1.26.0-x86_64.rpm --ignoreos
nano .bashrc 
cp .bashrc .bashrc.bak
nano .bashrc 
source .bashrc
cd Downloads/
echo set completion-ignore-case on | sudo tee -a /etc/inputrc
..
cd ..
nano .bashrc-personal
source .bashrc-personal 
Downloads/
cd Downloads/
git clone https://github.com/AdnanHodzic/auto-cpufreq.git
cd auto-cpufreq/ && sudo ./auto-cpufreq-installer
auto-cpufreq --help
cd auto-cpufreq/ && sudo ./auto-cpufreq-installer
cd ..
cd auto-cpufreq/ && sudo ./auto-cpufreq-installer
rm -r .
..
cd ..
rm -r auto-cpufreq/
rm -rf auto-cpufreq/
sudo rm -rf auto-cpufreq/
ls
sudo dnf upgrade
aliasedit
neofetch 
tput cols
tput lines
neofetch 
cd Downloads/
tar -xvf macOS-BigSur.tar.gz 
ls
sudo mv macOS-* /usr/share/icons
sudo rm /usr/share/icons/macOS-*
sudo rm -r /usr/share/icons/macOS-*
sudo curl raw.githubusercontent.com/StevenBlack/hosts/master/alternates/gambling-porn/hosts /etc/hosts1
sudo curl https://raw.githubusercontent.com/StevenBlack/hosts/master/alternates/fakenews-gambling-porn-social/hosts /etc/hosts1
ls /etc/hosts*
curl
curl --help
cat
cat --help
sudo vim /etc/hosts
neofetch 
python --version
rpm install tldr
dnf install tldr
sudo dnf install tldr
tldr cur
tldr curl
neofetch 
upower -e
tldr python
tldr --help
tldr -l
tldr awk
sudo dnf update -y
sudo dnf install powertop
sudo powertop --html=report.html
min report.html 
rm report.html 
ls
sudo vim /etc/default/grub
sudo update-grub
su -
sudo vim /etc/default/grub
./battop-v0.2.4-x86_64-unknown-linux-gnu 
sudo install battop-v0.2.4-x86_64-unknown-linux-gnu /usr/local/bin/battop
sudo systemctl stop bluetooth.service
sudo systemctl disable bluetooth.service
sudo powertop --html=report.html
awk -F '</?td ?>' '/tune/ { print $4 }' powerreport.html
awk -F '</?td ?>' '/tune/ { print $4 }' report.html
powertop --auto-tune
sudo powertop --auto-tune
sudo systemctl enable powertop.service --now
cat /etc/systemd/system/powertop.service
whereis powertop.service
cat /usr/lib/systemd/system/powertop.service
tlp
battop
battop 
rm Downloads/battop-v0.2.4-x86_64-unknown-linux-gnu 
battop 
vim .bashrc
source .bashrc
vim .bashrc
source .bashrc
cd /etc/systemd/system/graphical.target.wants/
cd
sudo hostnamectl set-hostname ThinkPad
battop
reboot
ppd
systemctl status power-profiles-daemon.service
sudo systemctl mask power-profiles-daemon.service
sudo dnf install tlp
sudo systemctl enable --now tlp.service
sudo systemctl status tlp.service
sudo dnf copr enable abn/throttled
sudo dnf install -y throttled
systemctl status tlp.service
sudo dnf copr disable abn/throttled
sudo dnf install python3-cairo-devel cairo-gobject-devel gobject-introspection-devel dbus-glib-devel python3-devel make libX11-devel
git clone https://github.com/erpalma/throttled.git
sudo ./throttled/install.sh
sudo systemctl enable --now throttled
sudo nano /etc/throttled.conf
source /etc/throttled.conf 
tldr source
sudo nano /etc/throttled.conf
reboot
battop
tlp-stat -b
sudo tlp-stat -b
sudo dnf remove power-profiles-daemon-0.12-2.fc37.x86_64 
clear && neofetch 
battop
battop 
neofetch 
battop 
neofetch 
aliasedit 
neofetch 
aliasupdate
neofetch 
man grep
sudo dnf install most
man grep
echo 'export PAGER="most"' >> .bashrc
man grep
source .bashrc
man grep
man date
vim .bashrc
sudo dnf remove most
vim .bashrc
man grep
source .bashrc
man grep
vim .bashrc
source .bashrc
man grpe
man grep
vim .bashrc
source .bashrc
vim .bashrc
source .bashrc
vim .bashrc
source .bashrc
vim .bashrc
source .bashrc
neofetch 
vim .bashrc
source .bashrc
man cal
chsh -l
vim .bashrc
source .bashrc
cd /usr/share/mozilla/extensions/\{ec8030f7-c20a-464f-9b0e-13a3a9e97384\}/
cd ~/Downloads/
vim .bashrc
cd
vim .bashrc
source .bashrc
cd /usr/share/mozilla/extensions/\{ec8030f7-c20a-464f-9b0e-13a3a9e97384\}/
cd ~/Pictures/Screenshots/
ls
cd
chsh -l
sudo su
man chsh
grep $USER /etc/passwd
sudo rpm install zsh
sudo dnf install zsh
chsh -l
chsh -s /bin/zsh thacer 
grep $USER /etc/passwd
echo "$SHELL"
sudo vim /etc/environment 
mkdir .config/zsh/
git clone https://github.com/ChristianChiarulli/Machfiles/tree/master/zsh
svn checkout https://github.com/ChristianChiarulli/Machfiles/trunk/zsh
vim .zshrc
mv .zshrc .config/zsh/
.config/zsh/
cd .config/zsh/
vim .zshrc 
vim zsh-aliases
vim zsh-exports
vim zsh-functions
vim zsh-prompt
sudo dnf install fzf
sudo vim /etc/environment 
rm -r .config/zsh/
zsh
sudo dnf install hstr
hstr --show-configuration >> .bashrc
hstr --show-configuration
hstr
dnf install zoxide
sudo dnf install zoxide
vim .bashrc
z
source .bashrc
z
z screenshots
z screenshots/
zi screenshot
zi screenshots
cd Pictures/Screenshots/
cd
z screenshots
..
cd
vim .bashrc
brew
curl -LSfs https://raw.githubusercontent.com/cantino/mcfly/master/ci/install.sh | sh -s -- --git cantino/mcfly
sudo curl -LSfs https://raw.githubusercontent.com/cantino/mcfly/master/ci/install.sh | sh -s -- --git cantino/mcfly
tldr homebrew
ls
rm report.html 
fzf
hstr --show-configuration >> .bashrc
hh
neofetch 
vim .config/fastfetch/config.conf 
pip install howdoi
vim .bashrc
howdoi make bash better
howdoi order dictionary in python
howdoi see which shell i'm running
what
howdoi kjfds
sudo dnf install pfetch
wget https://github.com/dylanraps/pfetch/archive/master.zip
neofetch 
battop
battop
battop
py PycharmProjects/pythonProjectcutenpop/main.py 
python PycharmProjects/pythonProjectcutenpop/main.py 
python PycharmProjects/pythonProjectcutenpop/main.py 
clear
python PycharmProjects/pythonProjectcutenpop/main.py 
python PycharmProjects/pythonProjectcutenpop/main.py 
python PycharmProjects/pythonProjectcutenpop/main.py 
python PycharmProjects/pythonProjectcutenpop/main.py 
python PycharmProjects/pythonProjectcutenpop/main.py 
python PycharmProjects/pythonProjectcutenpop/main.py 
clear
python PycharmProjects/pythonProjectcutenpop/main.py 
battop
battop
battop
vimtutor 
cd Downloads/
sudo dnf upgrade
sudo dnf upgrade
neofetch 
tldr patch
vim vim-exercises.txt 
cat /etc/issue
cat /etc/fedora-release 
sudo dnf upgrade
neofetch 
ls
..
cd ..
ls
battop
vim .vimrc
vim Downloads/vim-exercises.txt 
vim .vimrc
tldr source
vim Downloads/vim-exercises.txt 
ls
rm TEST 
mv LINENR .lineNr
vim .vimrc 
vim Downloads/vim-exercises.txt 
vim .lineNr 
vim .vimrc 
vimtutor 
vimtutor 
vim Downloads/vim-exercises.txt 
ls
Downloads/
mv customvimtutor Downloads/
cd Downloads/
ls
git clone https://github.com/iggredible/Learn-Vim
cd Learn-Vim/
ls
rm LICENSE.txt && rm README.md && rm -r images/
rm ../Shion_Render.png 
vim ch00_read_this_first.md 
vim customvimtutor 
ls
cd Downloads/
ls
ls .vim/
fzf
..
cd
ls .vim/
mkdir -r .vim/autoload/
mkdir .vim/autoload/
mkdir .vim
mkdir .vim/autoload/
curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
vim ../.vimrc 
vim ../.vimrc 
vim ../.vimrc 
vim vim-exercises.txt 
vim ../.vimrc 
sudo dnf upgrade
neofetch 
vim ../.vimrc 
vim ../.vimrc 
vim vim-exercises.txt 
vim ../PycharmProjects/pythonProjectcutenpop/main.py 
vim ../.vimrc 
vim ../PycharmProjects/pythonProjectcutenpop/main.py 
ls
vim customvimtutor 
vim Learn-Vim/ch01_starting_vim.md 
vim ../.vimrc 
vim .vimrc 
vim .bashrc
source .bashrc
vim ./PycharmProjects/pythonProjectcutenpop/main.py 
vim .bashrc
vim .bashrc-personal 
aliasupdate 
vim .inputrc
vim .bashrc
source .bashrc
vim .bashrc
vim .inputrc
source .inputrc
vim .inputrc
source .inputrc
vim .inputrc
source .inputrc
vim .inputrc
source .inputrc
howdoi
howdoi enable vi mode terminal
neofetch 
vim .vimrc
vim .inputrc
source .inputrc
neofetch 
vim .vimrc
vim .inputrc
source .inputrc
vim .inputrc
source .inputrc
howdoi set vim as default editor linux
howdoi linux vim default editor
.vimrc
vim .bashrc
.vimrc
vim .vimrc
vim .vimrc
vim .vimrc
vim Downloads/vim-exercises.txt .viminfo .vimrc
vim Downloads/Learn-Vim/ch02_buffers_windows_tabs.md 
tldr tmux
neofetch 
vim .bashrc
source .bashrc && neofetch
tldr tmux
tmux new -s VimTestSession
tmux ls
neofetch 
tmux ls
vim Downloads/Learn-Vim/ch03_searching_files.md 
vim Downloads/Learn-Vim/ch04_vim_grammar.md 
vim PycharmProjects/pythonProjectcutenpop/rps.py 
rm -r Downloads/Learn-Vim/.git/ && rm Downloads/Learn-Vim/.gitignore 
aliasedit 
aliasupdate 
ls Downloads/Learn-Vim/
ll Downloads/Learn-Vim/
clear
aliasedit 
aliasupdate 
ls
ls Downloads/
ls PycharmProjects/
ls PycharmProjects/pythonProjectcutenpop/
ls Documents/
ls throttled/
vim .vimrc
ckear
clear
cd Downloads/
7z x Atkinson-Hyperlegible-Font-Print-and-Web-2020-0514.zip 
ls
rm Atkinson-Hyperlegible-Font-Print-and-Web-2020-0514.zip 
cd Atkinson-Hyperlegible-Font-Print-and-Web-2020-0514/
ls
cd Web\ Fonts/
ls
cd TTF/
ls
ls /usr/share/fonts
ls /usr/share/fonts/aajohan-comfortaa-fonts/
sudo mkdir /usr/share/fonts/Atkinson-Hyperlegible
cp * /usr/share/fonts/Atkinson-Hyperlegible/
sudo cp * /usr/share/fonts/Atkinson-Hyperlegible/
vim Downloads/vim-exercises.txt Downloads/customvimtutor 
vim /etc/fonts/conf.d
vim /etc/fonts/conf.d
cd /etc/fonts/conf.d
ls
vim README 
rm 10-hinting-slight.conf 
sudo rm 10-hinting-slight.conf 
vim 11-lcdfilter-default.conf 
cd /usr/share/fontconfig/conf.avail/
ls
vim README 
cd
sudo dnf install fontconfig-enhanced-defaults
sudo ln -s /usr/share/fontconfig/conf.avail/11-lcdfilter-light.conf 
clear && ls
sudo ln -s /usr/share/fontconfig/conf.avail/10-hinting-none.conf 
rm 11-lcdfilter-default.conf 
sudo rm 11-lcdfilter-default.conf 
dconf update
sudo dconf update
reboot
vim .vimrc 
battop
neofetch 
echo 'set completion-ignore-case On' >> .inputrc
cd .config/Min/
ls
mkdir userscripts
rm userscripts/
rm -r userscripts/
tldr curl
curl -r https://cancel.fm/dl/Ripcord-0.4.29-x86_64.AppImage
curl --remote-name https://cancel.fm/dl/Ripcord-0.4.29-x86_64.AppImage
ls
mv Ripcord-0.4.29-x86_64.AppImage Documents/
chmod +x Documents/Ripcord-0.4.29-x86_64.AppImage 
sudo vim /usr/bin/ripcord
chmod +x /usr/bin/ripcord 
sudo chmod +x /usr/bin/ripcord 
sudo dnf upgrade
sudo dnf upgrade
neofetch 
vim .config/fastfetch/config.conf 
vim .config/fastfetch/config.conf 
fastfetch --print-config-user > .config/fastfetch/config.conf 
neofetch 
neofetch 
neofetch 
neofetch 
vim .config/fastfetch/config.conf 
rm Documents/Ripcord-0.4.29-x86_64.AppImage 
sudo rm /usr/bin/ripcord 
neofetch 
vim .config/fastfetch/config.conf 
neofetch 
vim .config/fastfetch/config.conf 
neofetch 
battop
ssh localhost
sudo dnf install openssh-server
sudo service ssh status
sudo systemctl status sshd
sudo systemctl start sshd
sudo service ssh status
sudo systemctl status sshd
ip route
sudo systemctl status sshd
ls
touch Documents/boingo
rm Documents/boingo
exit
sudo systemctl stop sshd
mv Downloads/Neema\ Parvini\ -\ The\ Populist\ Delusion-Imperium\ Press\ \(2022\).epub Documents/Books/
sudo dnf install samba
sudo dnf remove samba
ssh localhost
vim .vimrc 
battop
howdoi list comprehension python
battop
sudo dnf install google-roboto-mono-fonts-3.000-0.2.20220620git.fc37.noarch 
vim .vimrc
vim Downloads/vim-exercises.txt 
vim .vimrc
neofetch 
python PycharmProjects/pythonProjectcutenpop/somefile.py 
python PycharmProjects/pythonProjectcutenpop/somefile.py 
python PycharmProjects/pythonProjectcutenpop/somefile.py 
neofetch 
vim PycharmProjects/pythonProjectcutenpop/somefile.py
vim .vimrc
python PycharmProjects/pythonProjectcutenpop/somefile.py 
vim PycharmProjects/pythonProjectcutenpop/somefile.py 
vim Downloads/vim-exercises.txt 
echo noremap <Up> <NOP> > .vimrc
tldr echo
echo "noremap <Up> <NOP>" >> .vimrc
echo "noremap <Down> <NOP>" >> .vimrc
echo "noremap <Left> <NOP>" >> .vimrc
echo "noremap <Right> <NOP>" >> .vimrc
vim .vimrc
vim .vimrc
echo "let g:hardtime_default_on = 1" >> .vimrc
vim Downloads/Learn-Vim/ch05_moving_in_file.md 
sudo mv /etc/hosts ./hosts
ls
neofetch 
vim .vim/plugged/goyo.vim/autoload/goyo.vim 
vim Downloads/vim-exercises.txt 
vim .vimrc
sudo dnf upgrade
sudo dnf install go
go install github.com/ciehanski/libgen-cli@latest
libgen
ls
sudo mv hosts /etc/
libgen search golang
go
go libgen search golang
env
tldr env
go
sudo dnf remove golang
rm -r go/
sudo rm -rf go/
ls
curl
tldr curk
tldr curl
curl --remote-name https://github.com/ciehanski/libgen-cli/releases/download/v1.0.9/libgen-cli-v1.0.9-linux
ls
chmod +x libgen-cli-v1.0.9-linux 
mv libgen-cli-v1.0.9-linux Documents/
Documents/libgen-cli-v1.0.9-linux 
./Documents/libgen-cli-v1.0.9-linux 
cd Documents/
./libgen-cli-v1.0.9-linux 
./libgen-cli-v1.0.9-linux libgen
./libgen-cli-v1.0.9-linux 
./libgen-cli-v1.0.9-linux libgen search golang
./libgen-cli-v1.0.9-linux search golang
ls
ls libgen/
rm -r libgen/
sudo vim /usr/bin/libgen
chmod +x /usr/bin/libgen
sudo chmod +x /usr/bin/libgen
cd && neofetch 
vim .vimrc
vim Downloads/Learn-Vim/ch06_insert_mode.md 
vim PycharmProjects/pythonProjectcutenpop/bagels.py 
vim PycharmProjects/pythonProjectcutenpop/bagels.py 
vim PycharmProjects/pythonProjectcutenpop/somefile.py 
vim PycharmProjects/pythonProjectcutenpop/main.py 
vim PycharmProjects/pythonProjectcutenpop/rps.py 
python PycharmProjects/pythonProjectcutenpop/rps.py 
vim PycharmProjects/pythonProjectcutenpop/rps.py 
python PycharmProjects/pythonProjectcutenpop/rps.py 
neofetch 
cd Downloads/Learn-Vim/ && clear && ls
vim ch04_vim_grammar.md 
mkdir advanced
rm advanced/
rm -r advanced/
mkdir ../advanced/
mv * ../advanced/
mv -t . ../advanced/ch00_read_this_first.md ../advanced/ch01_starting_vim.md ../advanced/ch02_buffers_windows_tabs.md ../advanced/ch04_vim_grammar.md ../advanced/ch05_moving_in_file.md ../advanced/ch06_insert_mode.md ../advanced/ch07_the_dot_command.md ../advanced/ch08_registers.md ../advanced/ch09_macros.md ../advanced/ch10_undo.md ../advanced/ch11_visual_mode.md 
clear && ls
mv ../advanced/ .
clear && ls
ls advanced/
cd ..
ls
rm customvimtutor 
mv vim-exercises.txt Learn-Vim/00vim-exercises.txt
ls
ls Learn-Vim/
vim Learn-Vim/00vim-exercises.txt 
sudo dnf install levien-inconsolata-fonts-3.000-7.fc37.noarch 
vim .vimrc 
sudo dnf remove levien-inconsolata-fonts-3.000-7.fc37.noarch 
neofetch 
vim PycharmProjects/pythonProjectcutenpop/rps.py 
sudo dnf install rsync
rsync PycharmProjects/pythonProjectcutenpop/rps.py thacer:/home/thacer/
rsync PycharmProjects/pythonProjectcutenpop/rps.py thacer@thacer:/home/thacer/
ssh thacer@thacer
vim .bash_history 
rsync PycharmProjects/pythonProjectcutenpop/rps.py 192.168.15.5:/home/thacer/
pip3 install revChatGPT --upgrade
ls
whereis session_token
fzf
python3 -m revChatGPT 
vim .local/lib/python3.11/site-packages/revChatGPT/config.json
python3 -m revChatGPT 
mv .local/lib/python3.11/site-packages/revChatGPT/config.json .
ls
mv config.json PycharmProjects/
cd PycharmProjects/
python3 -m revChatGPT 
git clone https://github.com/Zero6992/chatGPT-discord-bot
cd chatGPT-discord-bot/
ls
pip install -r requirements.txt
ls
vim config.json 
vim config.json
python3 bot.py 
cd image/
cd README/
gnome-photos 
vim README.md 
nautilus
python3 -m revChatGPT 
python3 bot.py
python3 -m discord 
pip install -U discord.py
pip3 install revChatGPT --upgrade
python3 -m discord 
python3 -m discord newbot
python3 -m discord newbot tairusann
ls tairusann/
python -m discord bot.py
cd
python3 -m revChatGPT 
cd PycharmProjects/
ls
cd chatGPT-discord-bot/
ls
python3 -m revChatGPT 
..
ls
..
ls
cd ..
ls
rm -rf chatGPT-discord-bot/ config.json 
pip3 uninstall revchatgpt 
vim Downloads/Learn-Vim/ch05_moving_in_file.md 
wget https://archlinux-br.com.br/archlinux
wget https://geo.mirror.pkgbuild.com
ls
rm index.html 
wget https://geo.mirror.pkgbuild.com/iso/2022.12.01/
tldr wget
rm index.html 
lsblk
mkfs.fat -F 32 /dev/zram0 
sudo mkfs.fat -F 32 /dev/zram0 
sudo umount /dev/zram0
lsblk
sudo umount /dev/sdb
sudo mkfs.fat -F 32 /dev/sdb
lsof /dev/sdb
sudo mkfs.fat -F 32 /dev/sdb
lsblk
lsblk
sudo umount /dev/sdb1
lsblk
sudo mkfs.fat -F 32 /dev/sdb
sudo mkfs.fat -F 32 /dev/sdb -I
lsblk
dd if=Downloads/archlinux-2022.12.01-x86_64.iso of=/dev/sdb bs=4M && sync
sudo dd if=Downloads/archlinux-2022.12.01-x86_64.iso of=/dev/sdb bs=4M && sync
neofetch 
rm Downloads/archlinux-2022.12.01-x86_64.iso 
vim Downloads/Learn-Vim/ch07_the_dot_command.md 
vim Downloads/Learn-Vim/ch11_visual_mode.md 
neofetch 
whereis arch 
ls Downloads/
sudo dnf upgrade
sudo dnf upgrade
neofetch 
sudo dnf upgrade
sudo dnf update
neofetch 
bash -c "$(curl -fsSL https://raw.githubusercontent.com/JackHack96/PulseEffects-Presets/master/install.sh)"
alsamixer
ps -e | grep pipewire
ping google.com
sudo ln -s /dev/video2 /dev/video0
sudo mv /dev/video0 /dev/video0.backup
sudo ln -s /dev/video2 /dev/video0
sudo ifconfig eth0 up
sudo ifconfig
sudo ifconfig
sudo dnf upgrade
sudo dnf update
neofetch 
sudo ifconfig
wifi 
ethtool 
ethtool  -h
echo "blacklist hid_uclogic" | sudo tee -a /etc/modprobe.d/blacklist.conf
sudo rmmod hid_uclogic
sudo udevadm control --reload-rules
sudo stat /dev/hidraw4
git clone https://github.com/OpenTabletDriver/OpenTabletDriver.git && cd ./OpenTabletDriver
./generate-rules.sh 
cd .
sudo mv ./bin/99-opentabletdriver.rules /etc/udev/rules.d/99-opentabletdriver.rules
ls\
ls
./generate-rules.sh 
..
..
cd ..
rm -rf OpenTabletDriver/
ls
otd
otd
otd-daemon \
otd-daemon
otd-daemon
sudo vim /etc/host
sudo vim /etc/hosts
Downloads/zz/
cd Downloads/zz/
7z x \[whiteboard\ 1\].rar 
7z
7z e \[whiteboard\ 1\].rar 
7z -t zip \[whiteboard\ 1\].rar 
inxi -Fzx
sudo dnf install inxi
inxi -Fzx
sudo mv /dev/video0 /dev/video0.backup && ln -s /dev/video2 /dev/video0
sudo mv /dev/video0 /dev/video0.backup && sudo ln -s /dev/video2 /dev/video0
sudo ln -s /dev/video2 /dev/video0
cat sudo mv /dev/video0 /dev/video0.backup && sudo ln -s /dev/video2 /dev/video0
battop
neofetch 
sudo vim /etc/hosts
neofetch 
neofetch 
clear
neofetch 
sudo dnf upgrade
sudo dnf upgrade
sudo dnf update
tlp-stat 
sudo tlp-stat
sudo vim /etc/tlp.conf
sudo tlp start
sudo vim /etc/tlp.conf
sudo tlp start
sudo vim /etc/tlp.conf
sudo tlp start
sudo dnf remove fontconfig-enhanced-defaults-2.0-1.fc35.noarch 
sudo dnf system-upgrade
sudo dnf system-upgrade download
sudo dnf --refresh upgrade
sudo dnf system-upgrade download
sudo dnf system-upgrade reboot
sudo dnf copr enable solopasha/hyprland
sudo dnf install hyprland
sudo dnf install python3-pyxdg python3-dbus util-linux whiptail
git clone https://github.com/Vladimir-csp/uwsm.git
cd uwsm/
./build-deb.sh -i
vim build-deb.sh 
..
cd
rm -r uwsm/
sudo rm -r uwsm/
vim .config/hypr/hyprland.conf 
vim .config/hypr/hyprland.conf 
vim -u NONE .config/hypr/hyprland.conf 
vim .vimrc 
vim -u NONE .vimrc 
touch keyboard
vim .config/hypr/hyprland.conf 
vim keyboard.conf 
vim .config/hypr/hyprland.conf 
sudo dnf install xdg-desktop-portal-hyprland
sudo dnf install hyprpolkitagent qt5-wayland qt6-wayland
sudo dnf install hyprpolkitagent
neofetch 
vim .config/hypr/keyboard.conf 
hyprctl dispatch exit
vim .config/hypr/keyboard.conf 
vim .config/GNOME-xdg-terminals.list 
vim .config/hypr/keyboard.conf 
vim .config/kitty/kitty.conf
vim .config/hypr/keyboard.conf 
neofetch 
vim .config/kitty/kitty.conf
vim .config/hypr/keyboard-T480.conf
cd .config/hypr/
vim hyprland.conf 
vim keyboard.conf 
vim keyboard-T480.conf 
vim hyprland.conf 
sudo dnf enable peterwu/rendezvous
sudo dnf copr enable peterwu/rendezvous
sudo dnf install bibata-cursor-themes
vim decoration.conf
vim hyprland.conf 
ls
gnome-session-quit --logout --no-prompt
vim .config/hypr/decoration.conf
vim .config/kitty/kitty.conf 
vim .config/hypr/hyprland.conf 
vim .config/hypr/decoration.conf 
vim .config/hypr/hyprland.conf 
vim .vimrc 
vim .config/hypr/hyprland.conf 
vim .vimrc
vim .config/hypr/hyprland.conf 
vim .vimrc
neofetch 
neofetch 
neofetch 
Downloads/Learn-Vim/
cd Downloads/Learn-Vim/
ls
ls advanced/
..
cd
vim .vimrc
vim .vimrc
vim .config/hypr/hyprland.conf 
vim .vimrc
vim .vim/plugged/material.vim/colors/material.vim 
vim .vimrc
vim .config/kitty/kitty.conf 
vim .vimrc
vim .config/hypr/hyprland.conf 
vim .vimrc
vim .vimrc
vim .vimrc
vim .vimrc
vim .config/hypr/hyprland.conf 
vim .config/hypr/hyprland.conf 
vim .vimrc
vim .vimrc
vim .vimrc
vim .vimrc
vim .vimrc
vim .vimrc
vim .vimrc
vim .vimrc
vim .vimrc
vim .vimrc
vim .vimrc
vim .vimrc
neofetch 
vim .config/hypr/hyprland.conf 
gnome-control-center 
neofetch 
neofetch 
fastfetch 
sudo rm /etc/hosts
cd .local/share/
ls
git clone https://github.com/LierB/fastfetch/tree/master
git clone https://github.com/LierB/fastfetch/
fastfetch --config fastfetch/presets/groups.jsonc 
fastfetch --config fastfetch/presets/hypr.jsonc 
cd
vim .bashrc
vim .config/fastfetch/config.conf 
sudo dnf install waybar
waybar 
mkdir .config/waybar
vim .config/waybar/config.jsonc
vim .config/waybar/mocha.css
vim .config/waybar/style.css
waybar 
vim .config/hypr/hyprland.conf 
vim .config/hypr/animations.conf
vim .config/hypr/keyboard.conf 
sudo dnf install gh
sudo dnf copr remove dawid/better_fonts
gh auth login
cd .mozilla/
ls
ls plugins/
sudo rm -r firefox/
git clone https://github.com/thacer13/firefox-profile
ls
ls firefox-profile/
mv firefox-profile/ firefox/
ls
ls .mozilla/firefox/
gsettings set org.gnome.desktop.interface gtk-theme 'Adwaita-dark'
vim .config/hypr/hyprland.conf 
vim .config/hypr/hyprland.conf 
vim .config/hypr/hyprland.conf 
mv .config/hypr/keyboard-T480.conf .config/hypr/T480-keyboard.conf
vim .config/hypr/hyprland.conf 
killall waybar && waybar &
neofetch 
vim .config/waybar/config.jsonc 
vim .config/zshrc
aliasedit 
vim .config/hypr/keyboard.conf 
vim .config/hypr/keyboard.conf 
vim .config/hypr/keyboard.conf 
hyprctl reload 
waybar 
vim .config/hypr/keyboard.conf 
sudo dnf install waylock
vim .config/hypr/keyboard.conf 
vim .config/hypr/keyboard.conf 
cat .config/hypr/keyboard.conf 
vim
sudo dnf install hyprlock
cd .mozilla/firefox/82tjhtve.default-release/chrome/onebar/
ls
vim userChrome.css
git clone https://git.gay/Freeplay/firefox-onebar.git
ls
ls firefox-onebar/
mv firefox-onebar/* .
ls firefox-onebar/
rm firefox-onebar/
l
ls
rm -r firefox-onebar/
sudo rm -r firefox-onebar/
vim .config/hypr/hyprlock.conf
vim .config/hypr/hyprlock.conf
hyprlock 
vim .config/hypr/hyprlock.conf
vim .config/hypr/hyprlock.conf
vim .config/hypr/hyprlock.conf
vim .vimrc 
vim .vimrc 
vim .vimrc 
vim .vimrc 
vim .config/hypr/hyprlock.conf
vim .config/hypr/decoration.conf 
vim .config/kitty/kitty.conf 
vim .config/kitty/kitty.conf 
vim .config/kitty/kitty.conf 
vim .config/hypr/decoration.conf 
vim .config/hypr/animations.conf 
vim .config/hypr/animations1.conf
vim .config/hypr/hyprland.conf 
wofi 
wofi --drun
wofi drun
wofi --show
wofi --show drun
wofi --show run
vim .config/hypr/keyboard.conf 
vim .config/hypr/animations
vim .config/hypr/animations1.conf 
echo $XDG_CONFIG_HOME
vim .config/hypr/hyprland.conf 
vim .config/hypr/hyprland.conf 
vim .config/hypr/animations1.conf 
hyprctl reload
vim .config/hypr/animations1.conf 
hyprctl clients wofi
hyprctl clients
vim .config/hypr/hyprland.conf 
vim .config/hypr/keyboard.conf 
vim .config/wofi.conf
mv .config/wofi.conf .config/wofi/
mkdir .config/wofi
mv .config/wofi.conf .config/wofi/
env | grep -i wofi
vim .config/hypr/keyboard.conf 
cat .bash_history | grep -i gnome
gsettings 
gsettings list-keys org.gnome.desktop.interface gtk-theme
gsettings list-schemas org.gnome.desktop.interface gtk-theme
gsettings describe org.gnome.desktop.interface gtk-theme
rm -rf .config/wofi/
ls .config/
vim PycharmProjects/pythonProjectcutenpop/somefile.py 
vim .bashrc
vim .local/share/fastfetch/presets/hypr.jsonc 
vim .local/share/fastfetch/presets/hypr.jsonc 
sudo dnf install dunst
vim .config/hypr/animations1.conf 
vim .config/hypr/hyprland.conf 
vim .config/hypr/animations.conf 
cat .bash_history | grep -i adwaita
man cat
man eval
vim .config/gtk-3.0/settings.ini
vim .mozilla/firefox/82tjhtve.default-release/chrome/userChrome.css 
vim .config/hypr/animations.conf 
vim .config/hypr/animations1.conf 
vim .config/hypr/animations.conf 
vim .config/hypr/hyprland.conf 
vim .config/hypr/animations1.conf 
vim Downloads/Learn-Vim/ch11_visual_mode.md 
waybar 
waybar 
vim .config/waybar/config.jsonc 
vim .config/waybar/config.jsonc 
sudo dnf install pipewire-pulse
sudo dnf install pavucontrol
notify-send 
notify-send "test" "good morning USA!"
mkdir .config/dunst
notify-send "test" "good morning USA!"
notify-send "test" "good morning USA!"
waybar 
dunst &
notify-send "test" "good morning USA!"
killall dunst 
dunst &
notify-send "test" "good morning USA!"
dunst
dunst &
notify-send "test" "good morning USA!"
dunst &
notify-send "test" "good morning USA!"
dunst &
notify-send "test" "good morning USA!"
dunst &
notify-send "test" "good morning USA!"
dunst &
notify-send "test" "good morning USA!"
killall dunst 
dunst &
notify-send "test" "good morning USA!"
vim .config/dunst/dunstrc
sudo dnf install ncdu
ncdu
sudo dnf install nm-applet
nm-applet 
nm-applet --indicator &
clear
killall nm-applet
killall nm-applet 
nm-applet --indicator &
vim .config/waybar/config.jsonc 
vim .config/waybar/style.css 
vim .config/waybar/config.jsonc 
vim .config/waybar/mocha.css 
vim .config/kitty/kitty.conf 
vim .vimrc 
vim .vimrc 
vim .vimrc 
vim .vimrc 
vim
vim &
vim .vimrc 
vim .vimrc 
vim .vimrc 
vim .config/kitty/kitty.conf 
vim .vimrc 
vim .vimrc 
vim .vim/plugged/material.vim/colors/material.vim 
sudo dnf install networkmanager
sudo dnf install NetworkManager
NetworkManager
NetworkManager --help
clear && neofetch
fastfetch 
man NetworkManager
vim .config/hypr/hyprland.conf 
vim .config/kitty/kitty.conf 
sudo dnf install zsh
sudo chsh $USER
sudo chsh $USER
vim .zsh_history
rm .zsh_history
cp .bash_history .zsh_history
sudo rm -r .config/antidote
vim .bashrc
curl -L git.io/antigen > antigen.zsh
ls
mv antigen.zsh .config/
rm .config/antigen.zsh
git clone --depth=1 https://github.com/mattmc3/antidote.git ${ZDOTDIR:-~}/.antidote
ls
mv .antidote .config/.antidote
mv .config/.antidote .config/antidote
sudo dnf install zsh-syntax-highlighting
sudo dnf config-manager addrepo --from-repofile=https://download.opensuse.org/repositories/shells:zsh-users:zsh-autosuggestions/Fedora_Rawhide/shells:zsh-users:zsh-autosuggestions.repo
sudo dnf install zsh-autosuggestions
rm -r .cache/antidote
sudo rm -r .cache/antidote
rm -r .cache/antidote
sudo rm -r .cache/antidote
git clone --branch stable https://github.com/liquidprompt/liquidprompt.git ~/.config/liquidprompt
sudo rm -r .config/liquidprompt
git clone https://github.com/sindresorhus/pure.git "$HOME/.config/pure"
cd .config/pure
cd
cd .config/pure
cd
sudo dnf install zsh-completions
sudo dnf install zsh-completions-git
plug
sudo dnf install fzf
vim .zshrc
vim .zshrc
vim .zshrc
.local/share/fastfetch/presets
vim os.jsonc
vim .zshrc
cd .local/share/fastfetch
vim presets/hypr.jsonc
cd .local/share/fastfetch
vim presets/minimal.jsonc
vim presets/os.jsonc
cd .local/share/fastfetch
vim presets/os.jsonc
cd .local/share/fastfetch
vim presets/hypr.jsonc
vim .vimrc
vim .vimrc
vim .vimrc
git clone https://github.com/ael-code/zsh-colored-man-pages.git\

ls
mv zsh-colored-man-pages/colored-man-pages.plugin.zsh .config/.colored-man-pages.plugin.zsh
sudo rm -r zsh-colored-man-pages
sudo mkdir /usr/share/colored-man-pages
man cat
vim .config/.colored-man-pages.plugin.zsh
man vim
mv .config/.colored-man-pages.plugin.zsh /usr/share/colored-man-pages/colored-man-pages.zsh
sudo mv .config/.colored-man-pages.plugin.zsh /usr/share/colored-man-pages/colored-man-pages.zsh
ls /usr/share/colored-man-pages
vim .zshrc
man cat
vim /usr/share/colored-man-pages/colored-man-pages.zsh
sudo rm -r /usr/share/colored-man-pages
man cat
vim .vimrc
vim .config/hypr/hyprland.conf 
vim .config/hypr/hyprland.conf 
vim sup.py
python sup.py
python sup.py
python sup.py
python sup.py
rm sup.py
vim .config/hypr/hyprlock.conf
vim .config/hypr/hyprland.conf 
vim .config/hypr/keyboard.conf
vim .zshrc
ls -lf
vim .zshrc
ln -s /usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh .config/zsh-autosuggestions
ln -s /usr/share/zsh-syntax-highlighting .config/zsh-syntax-highlighting
unlink .config/zsh-autosuggestions
ln -s /usr/share/zsh-autosuggestions .config/zsh-autosuggestions
ls .config/zsh-autosuggestions
ls -lf
cd .config/
ls -lf
vim .zshrc
vim .zshrc
vim .mozilla/firefox/82tjhtve.default-release/places.sqlite
cd .mozilla/firefox/82tjhtve.default-release/chrome/onebar/
../..
git status chrome/onebar
git status 
vim ~/.zshrc
man cat
man man
sudo dnf install tldr
tldr man
tldr git
tldr find
find . '.git'
ls -la
ls -la chrome/onebar
ls -la chrome/
ls -la ..
vim ../.git
ls
ls -la chrome
vim chrome/onebar/userChrome.css
git add .
git commit -m "Chrome update, no history"
gh auth login
gh auth login
gh auth status
git config --global user.name "thacer13" && git config --global user.email "51170751+thacer13@users.noreply.github.com"
git commit -m "Chrome update, no history"
git push origin master
cd .
git ls-files --exclude-standard --others
cd chrome/onebar/
git status
../..
git add chrome
git commit -m "Attempting to add onebar"
git add chrome/onebar/userChrome.css
cat .gitmodules
git rm --cached chrome/onebar
git add chrome
git commit -m "Attempting to add onebar"
git push origin master
..
git rm --cached r3z4gqji.default
git rm -r --cached r3z4gqji.default
git rm -r --cached Crash\ Reports
ls
vim installs.ini
vi profiles.ini
git commit -m "Removing useless stuff"
git push origin master
git add installs.ini profiles.ini
git commit -m "updating profile information"
git push origin master
git ls-files --exclude-standard --others
cd
ls -la
sudo dnf upgrade
sudo dnf upgrade --refresh
.mozilla/firefox
git ls-files --exclude-standard --others >> .gitignore
git add .gitignore
vim .gitignore
vim .gitignore
git add .gitignore
git commit -m "created .gitignore"
git push origin master
git pull
git config pull.rebase false
git pull
git push origin master
ls
git ls-files --exclude-standard --others
git status
cd
vim .vimrc
vim .vimrc
vim .gitignore
cat .gitignore
git init
git add .
git reset
git add .
git ls-files -s | grep '^120000'
git ls-files -s
git ls-files --exclude-standard --others
git ls-files
git reset
git ls-files
git add .
git submodule update --init --recursive
git reset
git config --global --list
git status
git reset
git status
git ls-files --exclude-standard --others
git add .vimrc .zshrc vim/ .config/hypr .config/kitty .config/waybar .config/dunst
git add .
git reset
git ls-files --exclude-standard --others
sudo rm -rf .git
vim .giti
vim .gitignore
vim .zshrc
ln -s /usr/share/fastfetch/presets .config/fastfetch/presets
unlink .config/fastfetch/presets
cp -r /usr/share/fastfetch/presets .config/fastfetch/presets
unlink .config/zsh-autosuggestions
unlink .config/zsh-syntax-highlighting
cp -r /usr/share/zsh-autosuggestions .config/zsh-autosuggestions
cp -r /usr/share/zsh-syntax-highlighting .config/zsh-syntax-highlighting
ls -lf .config
cd
vim .zshrc
cp -r /usr/share/fastfetch/presets .config/fastfetch/presets
rm -r .config/fastfetch/presets/presets
rm -r .config/fastfetch/presets
sudo cp -r /usr/share/fastfetch/presets .config/fastfetch/presets
ls .config/fastfetch/presets
ls .config/fastfetch/presets/examples
vim .zshrc
rm -r .config/fastfetch/presets
sudo rm -r .config/fastfetch/presets
cp -r /local/share/fastfetch/presets .config/fastfetch/presets
cp -r /.local/share/fastfetch/presets .config/fastfetch/presets
cp -r .local/share/fastfetch/presets .config/fastfetch/presets
ls -lf .config
ls -lf
rm -r .vim/plugged/goyo.vim
sudo rm -r .vim/plugged/goyo.vim
sudo rm -r .vim/plugged/limelight.vim
vim .gitignore
ls .config/fastfetch
ls .config/
ls -lf .config
ls -l .config/fastfetch/
ls -l .config/fastfetch/presets
ls -l .config/fastfetch/presets/arch.jsonc
ls -l .config/fastfetch/
ls -lf
vim .config/hypr/animations1.conf
vim .config/hypr/animations1.conf 
vim .config/hypr/animations1.conf 
sudo dnf install hyprsunset
hyprsunset --help
vim .config/hypr/animations1.conf 
rpm -q cronie -cronie-anacron
sudo rpm -q cronie -cronie-anacron
systemctl status crond.service
sudo dnf remove hyprsunset
networkctl
.config/hypr/
mv decoration.conf decorations.conf
nmcli
vim .config/hypr/animations1.conf 
rm .config/hypr/animations.conf
mv .config/hypr/animations1.conf .config/hypr/animations.conf
vim .config/hypr/hyprland.conf 
vim .config/kitty/kitty.conf
dnf leaves
sudo dnf remove anaconda abrt
sudo dnf remove anaconda
sudo dnf remove cups
sudo dnf remove nwg-panel
sudo dnf remove gnome-photos gnome-maps gnome-clocks gnome-calendar
dnf leaves
sudo dnf remove gnome-backgrounds gnome-boxes
rm -r .config/gnome-boxes
vim .zshrc
vim .zshrc
z hypr
cd
vim .zshrc
vim .zshrc
vim .zshrc
man find
tldr find
find /home/thacer -name '.gitignore'
git init
git add .
git reset
git add .gitignore
git add .gitignore
git add /home/thacer/.gitignore
git add /home/thacer/.gitignore
git add .vim
git reset
sudo rm -rf .vim/plugged/python-syntax/.git
sudo rm -rf .vim/plugged/vim-hardtime/.git
git add .vim
git reset
sudo rm -rf .vim/plugged/material.vim/.git
git add .vim
git add .vimrc
git add .zshrc
git add .config/fastfetch
git add .config/hypr
git add .config/kitty
git add .config/waybar
git add .config/dunst
git add .config/pure
git add .config/zsh-syntax-highlighting
git add .config/zsh-autosuggestions
git commit
git commit -m "Initial commit"
gh repo create config-files --private --source=. --remove=upstream --push
gh repo create config-files --private --source=. --remote=upstream --push
cat .gitconfig
ls -lf
git add .gitconfig
git commit -m "Add .gitconfig"
git push origin master
git remote add origin https://github.com/thacer13/config-files
git push origin master
git ls-files --exclude-standard --others
git ls-files --others --exclude-standard | awk -F/ 'NF>2 {print $1"/"$2}' | sort -u\

git diff
git diff HEAD
git status
git config --global core.excludesfile ~/.gitignore_global\

cp .gitignore .gitignore_global
git status
sudo rm -rf .config/pure/.git
cat .gitignore
vim .gitignore
git status
rm .gitignore_global
find /home/thacer -name '.gitignore'
rm .mozilla/firefox/.gitignore
rm PycharmProjects/pythonProjectcutenpop/venv/.gitignore
rm PycharmProjects/pythonProjectcutenpop/.idea/.gitignore
git status
vim .config/hypr/hyprlock.conf
git add .config/hypr/hyprlock.conf
git commit -m "Update hyprlock"
git push origin master
sudo dnf install flameshot
z hypr
vim windowrules.conf
ls
ls -lf
vim .config/hypr/hyprland.conf 
ls
vim hyprland.conf 
vim windowrules.conf
vim hyprland.conf 
vim keyboard.conf 
echo $XDG_CURRENT_DESKTOP
vim .config/hypr/hyprland.conf 
vim .config/hypr/keyboard.conf
git add .config/hypr/hyprland.conf .config/hypr/keyboard.conf .config/hypr/windowrules.conf
git commit -m "Screenshoting windowrules + shortcut"
git push origin master
man flatpak 
flatpak-list
man flatpak 
flatpak --list
flatpak --help
flatpak list
flatpak install com.obsproject.Studio
flameshot gui
XDG_CURRENT_DESKTOP=sway flameshot gui
git add .config/hypr/animations.conf
git add .config/hypr/hyprlock.conf
git add .config/hypr/hyprlock.conf
git add .config/hypr/animations.conf
git add .config/hypr/keyboard.conf
git add .config/hypr/*
git commit -m "Minor changes"
git push origin master
git add .config/fastfetch/presets/os.jsonc
git commit -m "Fix package display on fastfetch"
git push origin master
z hypr
vim animations.conf
..
vim hypr/hyprlock.conf
vim hypr/hyprland.conf
vim hypr/keyboard.conf
z hypr
vim windowrules.conf
z .config
cd
vim .zshrc
vim .config/fastfetch/presets/os.jsonc
z hypr
vim decorations.conf
vim animations.conf
vim hyprland.conf 
vim animations.conf
git add *
git commit -m "Decoration update"
git push origin master
vim decorations.conf
z hypr
vim keyboard.conf 
hyprpm enable expo
hyprpm list
hyprpm reload
hyprpm update
z hypr
vim keyboard.conf 
git add *
git commit -m "Disable touchscreen"
git push origin master
sudo dnf install hyprpm
hyprpm add https://github.com/hyprwm/hyprland-plugins
sudo dnf install --needed cmake meson cpio pkg-config
sudo dnf install cmake meson cpio pkg-config\

hyprpm add https://github.com/hyprwm/hyprland-plugins
vim plugins.conf
vim .config/hypr/hyprland.conf 
hyprpm update
sudo dnf install make automake gcc gcc-c++
hyprpm update
sudo dnf install opengl
sudo dnf search opengl libgl
sudo dnf install mesa-libgl-devel
sudo dnf install mesa-libGL-devel
hyprpm update
sudo dnf install aquamarine
sudo dnf install udis
sudo dnf install cpio
hyprpm enable expo
hyprpm list
hyprpm reload
sudo dnf install aquamarine-devel
hyprpm update
sudo dnf install hyprlang
sudo dnf install hyprlang-devel
hyprpm update
sudo dnf install hyprcursor
sudo dnf install hyprland-devel
hyprpm update
hyprpm reload
hyprpm enable expo
hyprpm list
hyprpm add https://github.com/hyprwm/hyprland-plugins
hyprpm enable expo
hyprpm list
hyprpm enable hyprexpo
z hypr
vim hyprland.conf 
sudo dnf upgrade --refresh
hyprpm update
hyprpm
hyprpm list
z hypr
vim plugins.conf
vim hyprland.conf 
hyprpm disable hyprexpo
hyprpm reload
sudo dnf remove hyprpm
vim hy
z hypr
vim hyprland.conf 
git pull
z hypr
vim keyboard.conf 
sudo dnf remove hyprland-devel
dnf history userinstalled
dnf history --help
sudo dnf history userinstalled
dnf repoquery --userinstalled
vim .git/README.md
dnf history list | grep "Install"\

z hypr
vim hyprland.conf 
